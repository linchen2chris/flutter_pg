*  flutter_pg

A new Flutter project.

**  Getting Started

This project is a starting point for a Flutter application.

A few resources to get you started if this is your first Flutter project:

- [Lab: Write your first Flutter app](https://docs.flutter.dev/get-started/codelab)
- [Cookbook: Useful Flutter samples](https://docs.flutter.dev/cookbook)

For help getting started with Flutter development, view the
[online documentation](https://docs.flutter.dev/), which offers tutorials,
samples, guidance on mobile development, and a full API reference.

* Reproduce issues
- prepare:
  set flutter versions: =fvm use stable=
** [ ] reproduce run twice
1. run small backend:
   #+begin_src shell
node index.js
   #+end_src
2. run test :
   #+begin_src shell
fvm flutter drive --driver=test_driver/integration_test.dart \
    --target=integration_test/smock_test.dart \
    -d chrome
   #+end_src
3. you will see node api is called twice
   [[file:./README/twice.png]]
    #+begin_src shell
╰─$ node index.js
called
called
    #+end_src

** [ ] reproduce headless
2. run test :
   #+begin_src shell
fvm flutter drive --driver=test_driver/integration_test.dart \
    --target=integration_test/smock_test.dart \
    -d chrome --headless
   #+end_src
you will see chrome startup as well


* What I learn
** pump
1. Future.delay will block the UI rendering, so it is not a good idea to use it in UI test to wait for some time
2. pumpAndSettle will wait webrtc finish. but it will wait animation finish, it's a good idea to click button and wait it jump to new page
    be careful after button click, if it has no animation, it won't wait for correctly
3. pumpForSeconds totally same as pumpAndSettle, but it will wait for given seconds.
4. tester.pump(Duration(seconds: 10)) will wait for 10 second, but UI is blocked. but it won't wait for animation finish
** read state or context from widget
1. use tester.state to get state
2. use tester.firstWidget(find.byType(Widget)) to get widget
3. use tester.firstElement(find.byType(MyHomePage)) to get the build context
4. then use Provider.of<>(tester.firstElement(find.byType(MyHomePage))) to get the provider data


